version: '3'

includes:
  containers: 
    taskfile: ../project-starter/.taskfiles/containers.yaml
    internal: true
  utils: 
    taskfile: ../project-starter/.taskfiles/utils.yaml
    internal: true

silent: false

vars:
  TOOLS_DIR: ./.tools

# Look for per-environment .env files, and fall back to .env
dotenv: ['.env.{{.ENV}}', '.env']

tasks:
  default:
    desc: List of all tasks
    cmds:
      - task -a

  dev-tools:
    desc: Install dev tools into project directory
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b {{.TOOLS_DIR}}
      - wget https://github.com/cosmtrek/air/releases/download/v1.42.0/air_1.42.0_linux_amd64 -q -O {{.TOOLS_DIR}}/air
      - chmod +x {{.TOOLS_DIR}}/* 
    status:
      - test -f {{.TOOLS_DIR}}/air 
      - test -f {{.TOOLS_DIR}}/golangci-lint

  lint:
    desc: Run linter
    cmds:
      - "{{.TOOLS_DIR}}/golangci-lint run --timeout 5m"

  lint-fix:
    desc: Run linter and attempt to fix problems
    cmds:
      - "{{.TOOLS_DIR}}/golangci-lint run --fix --timeout 5m"

  images:
    desc: Build container images
    cmds:
      - task: containers:build
        vars:
          DOCKERFILE: build/Dockerfile.controller
          IMAGE_SUFFIX: -controller
      - task: containers:build
        vars:
          DOCKERFILE: build/Dockerfile.test
          IMAGE_SUFFIX: -proxy

  push:
    desc: Push container images
    cmds:
      - task: containers:push
        vars:
          IMAGE_SUFFIX: -controller
      - task: containers:push
        vars:
          IMAGE_SUFFIX: -proxy

  run-ctrl:
    desc: Run controller
    cmds:
      - $TOOLS_DIR/air -c controller/.air.toml

  run-proxy:
    desc: Run proxy
    cmds:
      - $TOOLS_DIR/air -c proxy/.air.toml

  build:
    desc: Build binaries
    cmds:
      - mkdir -p ./bin
      - go build -o ./bin/controller ./controller
      - go build -o ./bin/proxy ./proxy

  clean:
    desc: Clean up, remove temp files and tools
    cmds:
      - rm -rf ./bin ./tmp ./.tools

  